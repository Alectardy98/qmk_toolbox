diff --git a/linux/QMKToolbox/App.axaml b/linux/QMKToolbox/App.axaml
index a383e91..af1a745 100644
--- a/linux/QMKToolbox/App.axaml
+++ b/linux/QMKToolbox/App.axaml
@@ -1,12 +1,15 @@
 <Application xmlns="https://github.com/avaloniaui"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:local="using:QMK_Toolbox"
+             xmlns:system="clr-namespace:System;assembly=System.Runtime"
              x:Class="QMK_Toolbox.App">
+    <Application.Resources>
+    </Application.Resources>
     <Application.DataTemplates>
         <local:ViewLocator />
     </Application.DataTemplates>
 
     <Application.Styles>
-        <FluentTheme Mode="Light" />
+
     </Application.Styles>
 </Application>
\ No newline at end of file
diff --git a/linux/QMKToolbox/Program.cs b/linux/QMKToolbox/Program.cs
index b4da340..ec5451a 100644
--- a/linux/QMKToolbox/Program.cs
+++ b/linux/QMKToolbox/Program.cs
@@ -1,5 +1,6 @@
 ﻿using System;
 using Avalonia;
+using Avalonia.Dialogs;
 using Avalonia.ReactiveUI;
 
 namespace QMK_Toolbox;
@@ -25,6 +26,7 @@ internal class Program
         return AppBuilder.Configure<App>()
             .UsePlatformDetect()
             .LogToTrace()
+   //         .UseManagedSystemDialogs()
             .UseReactiveUI();
     }
 }
\ No newline at end of file
diff --git a/linux/QMKToolbox/Properties/Resources.Designer.cs b/linux/QMKToolbox/Properties/Resources.Designer.cs
index e9a874b..f3c3587 100644
--- a/linux/QMKToolbox/Properties/Resources.Designer.cs
+++ b/linux/QMKToolbox/Properties/Resources.Designer.cs
@@ -1,7 +1,6 @@
 ﻿//------------------------------------------------------------------------------
 // <auto-generated>
 //     This code was generated by a tool.
-//     Runtime Version:4.0.30319.42000
 //
 //     Changes to this file may cause incorrect behavior and will be lost if
 //     the code is regenerated.
@@ -12,46 +11,32 @@ namespace QMK_Toolbox.Properties {
     using System;
     
     
-    /// <summary>
-    ///   A strongly-typed resource class, for looking up localized strings, etc.
-    /// </summary>
-    // This class was auto-generated by the StronglyTypedResourceBuilder
-    // class via a tool like ResGen or Visual Studio.
-    // To add or remove a member, edit your .ResX file then rerun ResGen
-    // with the /str option, or rebuild your VS project.
-    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
-    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
-    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
-    internal class Resources {
+    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
+    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
+    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
+    public class Resources {
         
-        private static global::System.Resources.ResourceManager resourceMan;
+        private static System.Resources.ResourceManager resourceMan;
         
-        private static global::System.Globalization.CultureInfo resourceCulture;
+        private static System.Globalization.CultureInfo resourceCulture;
         
-        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
+        [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
         internal Resources() {
         }
         
-        /// <summary>
-        ///   Returns the cached ResourceManager instance used by this class.
-        /// </summary>
-        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
-        internal static global::System.Resources.ResourceManager ResourceManager {
+        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
+        public static System.Resources.ResourceManager ResourceManager {
             get {
-                if (object.ReferenceEquals(resourceMan, null)) {
-                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("QMK_Toolbox.Properties.Resources", typeof(Resources).Assembly);
+                if (object.Equals(null, resourceMan)) {
+                    System.Resources.ResourceManager temp = new System.Resources.ResourceManager("QMK_Toolbox.Properties.Resources", typeof(Resources).Assembly);
                     resourceMan = temp;
                 }
                 return resourceMan;
             }
         }
         
-        /// <summary>
-        ///   Overrides the current thread's CurrentUICulture property for all
-        ///   resource lookups using this strongly typed resource class.
-        /// </summary>
-        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
-        internal static global::System.Globalization.CultureInfo Culture {
+        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
+        public static System.Globalization.CultureInfo Culture {
             get {
                 return resourceCulture;
             }
@@ -59,5 +44,17 @@ namespace QMK_Toolbox.Properties {
                 resourceCulture = value;
             }
         }
+        
+        public static string ApplicationTitle {
+            get {
+                return ResourceManager.GetString("ApplicationTitle", resourceCulture);
+            }
+        }
+        
+        public static string FileMenu {
+            get {
+                return ResourceManager.GetString("FileMenu", resourceCulture);
+            }
+        }
     }
 }
diff --git a/linux/QMKToolbox/Properties/Resources.resx b/linux/QMKToolbox/Properties/Resources.resx
index af7dbeb..44be546 100644
--- a/linux/QMKToolbox/Properties/Resources.resx
+++ b/linux/QMKToolbox/Properties/Resources.resx
@@ -114,4 +114,10 @@
   <resheader name="writer">
     <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
   </resheader>
+  <data name="ApplicationTitle" xml:space="preserve">
+    <value>QMK Toolbox</value>
+  </data>
+  <data name="FileMenu" xml:space="preserve">
+    <value>_File</value>
+  </data>
 </root>
\ No newline at end of file
diff --git a/linux/QMKToolbox/Usb/UsbDeviceRecordHelper.cs b/linux/QMKToolbox/Usb/UsbDeviceRecordHelper.cs
index 6fdab1b..a0f0d09 100644
--- a/linux/QMKToolbox/Usb/UsbDeviceRecordHelper.cs
+++ b/linux/QMKToolbox/Usb/UsbDeviceRecordHelper.cs
@@ -1,5 +1,4 @@
-using System;
-using System.Collections.Generic;
+using System;using System.Collections.Generic;
 using System.Diagnostics;
 using System.IO;
 using System.Text;
diff --git a/linux/QMKToolbox/Views/MainWindow.axaml b/linux/QMKToolbox/Views/MainWindow.axaml
index bbc9822..48a1000 100644
--- a/linux/QMKToolbox/Views/MainWindow.axaml
+++ b/linux/QMKToolbox/Views/MainWindow.axaml
@@ -3,6 +3,8 @@
         xmlns:vm="using:QMK_Toolbox.ViewModels"
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
+        xmlns:r="clr-namespace:QMK_Toolbox.Properties"
+       
         mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
         x:Class="QMK_Toolbox.Views.MainWindow"
         Initialized="OnInitialized"
@@ -12,7 +14,7 @@
         FontSize="10"
         MinWidth="800"
         MinHeight="680"
-        Title="QMK Toolbox"
+        Title="{x:Static r:Resources.ApplicationTitle}"
         Background="#f0f0f0"
         Icon="/Resources/qmk.ico">
    
@@ -30,7 +32,7 @@
               Grid.Column="0"
               Grid.ColumnSpan="2"
               Margin="0,3,0,3">
-            <MenuItem Header="_File">
+            <MenuItem Header="{x:Static r:Resources.FileMenu}">
                 <MenuItem Header="_Open..." Command="{Binding OpenFileCommand}"/>
                 <Separator/>
                 <MenuItem Header="_Exit" Command="{Binding CloseCommand}"/>
diff --git a/linux/QMKToolbox/Views/MainWindow.axaml.cs b/linux/QMKToolbox/Views/MainWindow.axaml.cs
index 19aba54..700ed39 100644
--- a/linux/QMKToolbox/Views/MainWindow.axaml.cs
+++ b/linux/QMKToolbox/Views/MainWindow.axaml.cs
@@ -53,7 +53,7 @@ public partial class MainWindow : Window, IWindow
     {
         var vm = ((App)App.Current).MainWindowViewModel;
         var isLinux = RuntimeInformation.IsOSPlatform(OSPlatform.Linux);
-        if (isLinux)
+        if (!isLinux)
         {
             var helper = new OpenDlgHelper();
             var result = helper.GetFileName();
@@ -71,7 +71,7 @@ public partial class MainWindow : Window, IWindow
         dialog.Filters.Add(new FileDialogFilter() { Name = "Hex", Extensions = { "hex" } });
         dialog.Filters.Add(new FileDialogFilter() { Name = "Bin", Extensions = { "bin" } });
         dialog.AllowMultiple = false;
-        var result = dialog.ShowAsync(this).Result;
+        var result = dialog.ShowAsync(this).GetAwaiter().GetResult();
         return result?.First();
     }
 
